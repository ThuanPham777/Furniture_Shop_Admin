<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <!-- TailwindCSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-gray-100 font-sans leading-normal tracking-normal">
  <div class="container mx-auto my-10 p-6 bg-white rounded-lg shadow-md">
    <!-- Title -->
    <h1 class="text-3xl font-bold text-blue-600 mb-4">E-Commerce Dashboard</h1>

    <!-- Filters -->
    <div class="flex justify-between items-center mb-6">
      <div>
        <label for="timeRange" class="block text-sm font-medium text-gray-700">Select Time Range:</label>
        <select id="timeRange" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm">
          <option value="day">Day</option>
          <option value="week">Week</option>
          <option value="month">Month</option>
        </select>
      </div>
      <button class="bg-purple-600 text-white px-4 py-2 rounded-lg shadow-md hover:bg-purple-700"
        onclick="updateReports()">
        Apply Filters
      </button>
    </div>

    <!-- Revenue Report -->
    <div class="bg-white p-6 rounded-lg shadow-md mb-6">
      <h2 class="text-xl font-bold text-gray-800 mb-4">Revenue Report</h2>
      <canvas id="revenueChart" class="w-full"></canvas>
    </div>

    <!-- Top Products -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h2 class="text-xl font-bold text-gray-800 mb-4">Top Revenue by Product</h2>
      <canvas id="topProductsChart" class="w-full"></canvas>
    </div>
  </div>

  <script>
    // Dummy data (replace with server-side data)
    const revenueData = {
      day: { labels: ['Morning', 'Afternoon', 'Evening'], data: [300, 500, 200] },
      week: { labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], data: [1000, 1500, 1200, 1400, 1700, 900, 800] },
      month: { labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'], data: [4000, 4500, 3800, 5000] }
    };

    const topProductsData = {
      day: { labels: ['Product A', 'Product B', 'Product C'], data: [200, 150, 100] },
      week: { labels: ['Product A', 'Product B', 'Product C', 'Product D'], data: [500, 400, 300, 200] },
      month: { labels: ['Product A', 'Product B', 'Product C', 'Product D', 'Product E', 'Product F', 'Product G', 'Product H', 'Product I', 'Product J'], data: [1000, 800, 600, 500, 400,1000, 800, 600, 500, 400] }
    };

    // Default charts
    let revenueChart, topProductsChart;

    // Initialize Charts
    function initCharts(timeRange = 'day') {
      const ctxRevenue = document.getElementById('revenueChart').getContext('2d');
      const ctxTopProducts = document.getElementById('topProductsChart').getContext('2d');

      // Revenue Chart
      revenueChart = new Chart(ctxRevenue, {
        type: 'line',
        data: {
          labels: revenueData[timeRange].labels,
          datasets: [{
            label: 'Revenue',
            data: revenueData[timeRange].data,
            borderColor: '#6b46c1',
            backgroundColor: 'rgba(107, 70, 193, 0.2)',
            borderWidth: 2,
            tension: 0.3
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          },
          scales: {
            x: { title: { display: true, text: 'Time Range' } },
            y: { title: { display: true, text: 'Revenue ($)' } }
          }
        }
      });

      // Top Products Chart
      topProductsChart = new Chart(ctxTopProducts, {
        type: 'bar',
        data: {
          labels: topProductsData[timeRange].labels,
          datasets: [{
            label: 'Revenue by Product',
            data: topProductsData[timeRange].data,
            backgroundColor: '#6b46c1',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          },
          scales: {
            x: { title: { display: true, text: 'Products' } },
            y: { title: { display: true, text: 'Revenue ($)' } }
          }
        }
      });
    }

    // Update Reports based on Time Range
    function updateReports() {
      const timeRange = document.getElementById('timeRange').value;

      // Update Revenue Chart
      revenueChart.data.labels = revenueData[timeRange].labels;
      revenueChart.data.datasets[0].data = revenueData[timeRange].data;
      revenueChart.update();

      // Update Top Products Chart
      topProductsChart.data.labels = topProductsData[timeRange].labels;
      topProductsChart.data.datasets[0].data = topProductsData[timeRange].data;
      topProductsChart.update();
    }

    // Initialize charts on page load
    window.onload = () => initCharts();
  </script>
</body>

</html>