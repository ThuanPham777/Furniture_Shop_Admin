<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Revenue Report</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .total-row {
      font-weight: bold;
      background-color: #f6f6f6;
    }
  </style>
</head>

<body class="bg-gray-50 font-sans leading-normal tracking-normal">
  <div class="container max-w-6xl mx-auto py-10 px-6 bg-white rounded-lg shadow-lg">
    <!-- Title -->
    <div class="text-center mb-10">
      <h1 class="text-4xl font-extrabold text-blue-600">Revenue Report</h1>
      <p class="text-gray-500 mt-2">Analyze your revenue performance with detailed reports.</p>
    </div>

    <!-- Filters -->
    <div class="flex flex-wrap gap-6 items-end mb-8">
      <div class="flex-1">
        <label for="timeRange" class="block text-sm font-medium text-gray-700 mb-2">Time Range</label>
        <select id="timeRange" class="w-full p-3 border border-gray-300 rounded-lg shadow-sm"
        onchange="fetchReport()"
        >
          <option value="day">Day</option>
          <option value="week">Week</option>
          <option value="month">Month</option>
        </select>
      </div>
      <div class="flex-1">
        <label for="startDate" class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
        <input type="date" id="startDate" class="w-full p-3 border border-gray-300 rounded-lg shadow-sm" onchange="fetchReport()"/>
      </div>
      <div class="flex-1">
        <label for="endDate" class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
        <input type="date" id="endDate" class="w-full p-3 border border-gray-300 rounded-lg shadow-sm" onchange="fetchReport()"/>
      </div>
    </div>

    <!-- Revenue Table -->
    <div class="overflow-x-auto">
      <div class="border rounded-lg shadow">
        <!-- Table Header -->
        <div class="grid grid-cols-3 bg-purple-100 font-bold text-blue-600 py-4 px-6">
          <div>Date</div>
          <div>Orders</div>
          <div>Total Revenue</div>
        </div>
        <!-- Table Body -->
        <div id="tableBody" class="divide-y divide-gray-200">
          <!-- Rows will be dynamically inserted here -->
        </div>
        <!-- Total Row -->
        <div class="grid grid-cols-3 bg-purple-50 font-bold py-4 px-6">
          <div class="col-span-2 text-right">Total Revenue:</div>
          <div id="totalRevenue" class="text-blue-600">$0.00</div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Fetch report data and update the table
    function fetchReport() {
      const timeRange = document.getElementById("timeRange").value;
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;

      // Cập nhật URL với query parameters
      const params = new URLSearchParams({
        timeRange,
        startDate,
        endDate,
      });

      // Sử dụng History API để thay đổi URL
      history.replaceState(null, "", `?${params.toString()}`);

      fetch(`/reports/getRevenueReport?${params.toString()}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Failed to fetch report");
          }
          return response.json();
        })
        .then((data) => {
          const tableBody = document.getElementById("tableBody");
          const totalRevenueElem = document.getElementById("totalRevenue");
          tableBody.innerHTML = "";

          let totalRevenue = 0;

          if (data.length) {
            data.forEach((item) => {
              const row = document.createElement("div");
              row.className = "grid grid-cols-3 py-4 px-6";
              row.innerHTML = `
                        <div>${item.date}</div>
                        <div>${item.totalOrders}</div>
                        <div>$${item.revenue.toFixed(2)}</div>
                    `;
              tableBody.appendChild(row);
              totalRevenue += item.revenue;
            });
          } else {
            tableBody.innerHTML = `<div class="text-center py-6 text-gray-500">No data available</div>`;
          }

          totalRevenueElem.textContent = `$${totalRevenue.toFixed(2)}`;
        })
        .catch((error) => {
          console.error('Error fetching report:', error);
          alert("Error fetching report");
        });
    }

    // Fetch initial report
    document.addEventListener("DOMContentLoaded", () => {
      fetchReport();
    });
  </script>
</body>

</html>