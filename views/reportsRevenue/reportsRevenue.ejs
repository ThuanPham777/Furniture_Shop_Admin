<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Revenue Report</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .total-row {
      font-weight: bold;
      background-color: #f6f6f6;
    }
  </style>
</head>

<body class="bg-gray-100 font-sans leading-normal tracking-normal">
  <div class="container max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md">
    <!-- Title -->
    <div class="text-center mb-6">
      <h1 class="text-3xl font-bold text-purple-600">Revenue Report</h1>
    </div>

    <!-- Filters -->
    <div class="flex flex-wrap gap-4 mb-6">
      <div class="flex-1">
        <label for="timeRange" class="block text-sm font-medium text-gray-700 mb-1">Time Range</label>
        <select id="timeRange" class="w-full p-2 border border-gray-300 rounded-md shadow-sm">
          <option value="day">Day</option>
          <option value="week">Week</option>
          <option value="month">Month</option>
        </select>
      </div>
      <div class="flex-1">
        <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">Start Date</label>
        <input type="date" id="startDate" class="w-full p-2 border border-gray-300 rounded-md shadow-sm" />
      </div>
      <div class="flex-1">
        <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">End Date</label>
        <input type="date" id="endDate" class="w-full p-2 border border-gray-300 rounded-md shadow-sm" />
      </div>
      <button class="self-end bg-purple-600 text-white px-4 py-2 rounded-lg shadow-md hover:bg-purple-700"
        onclick="fetchReport()">Apply Filters</button>
    </div>

    <!-- Revenue Table -->
    <div class="overflow-x-auto">
      <div class="border rounded-lg shadow-md">
        <div class="grid grid-cols-3 bg-gray-200 font-bold text-gray-700 py-2 px-4">
          <div>Date</div>
          <div>Orders</div>
          <div>Total Revenue</div>
        </div>
        <div id="tableBody" class="divide-y divide-gray-200">
          <!-- Rows will be dynamically inserted here -->
        </div>
        <div class="grid grid-cols-3 bg-gray-100 font-bold py-2 px-4">
          <div class="col-span-2 text-right">Total Revenue:</div>
          <div id="totalRevenue">$0.00</div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Fetch report data and update the table
    function fetchReport() {
        const timeRange = document.getElementById("timeRange").value;
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;

        console.log('Fetching report with params:', { timeRange, startDate, endDate }); // Log params

        fetch(`/reports/getRevenueReport?timeRange=${timeRange}&startDate=${startDate}&endDate=${endDate}`)
          .then((response) => {
            console.log('Response:', response.status); // Log HTTP status
            if (!response.ok) {
              throw new Error("Failed to fetch report");
            }
            return response.json();
          })
          .then((data) => {
            console.log('Fetched data:', data); // Log fetched data
            const tableBody = document.getElementById("tableBody");
            const totalRevenueElem = document.getElementById("totalRevenue");
            tableBody.innerHTML = "";

            let totalRevenue = 0;

            if (data.length) {
              data.forEach((item) => {
                const row = document.createElement("div");
                row.className = "grid grid-cols-3 py-2 px-4";
                row.innerHTML = `
                            <div>${item.date}</div>
                            <div>${item.totalOrders}</div>
                            <div>$${item.revenue.toFixed(2)}</div>
                        `;
                tableBody.appendChild(row);
                totalRevenue += item.revenue;
              });
            } else {
              tableBody.innerHTML = `<div class="text-center py-4 text-gray-500">No data available</div>`;
            }

            totalRevenueElem.textContent = `$${totalRevenue.toFixed(2)}`;
          })
          .catch((error) => {
            console.error('Error fetching report:', error); // Log fetch error
            alert("Error fetching report");
          });
      }

    // Fetch initial report
    document.addEventListener("DOMContentLoaded", () => {
      fetchReport();
    });
  </script>
</body>

</html>