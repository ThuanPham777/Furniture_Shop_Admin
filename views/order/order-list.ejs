<div class="bg-gray-100 font-sans leading-normal tracking-normal">
    <div class="container mx-auto my-10 p-6 bg-white rounded-lg shadow-md">
        <!-- Title -->
        <h1 class="text-3xl font-bold text-purple-600 mb-4">Manage Order</h1>

        <!-- Filters -->
        <div class="grid grid-cols-2 gap-4 mb-6">
            <!-- Filter by Status -->
            <select id="statusFilter" class="ant-select w-full" onchange="applyFilters()">
                <option value="">Filter by Status</option>
                <option value="Pending">Pending</option>
                <option value="Processing">Processing</option>
                <option value="Shipped">Shipped</option>
                <option value="Delivered">Delivered</option>
            </select>

            <!-- Order by Time -->
            <select id="timeOrder" class="ant-select w-full" onchange="applySorting()">
                <option value="desc">Order by Time: Newest First</option>
                <option value="asc">Order by Time: Oldest First</option>
            </select>
        </div>

        <!-- Ant Design Table -->
        <div class="ant-table-wrapper">
            <table id="userTable" class="ant-table ant-table-bordered w-full">
                <!-- Table Header -->
                <thead class="ant-table-thead">
                    <tr>
                        <th>Customer Name</th>
                        <th>Phone Number</th>
                        <th>Address</th>
                        <th>Products</th>
                        <th>Total Amount</th>
                        <th>Status</th>
                        <th>Order Date</th>
                        <th>View</th>
                    </tr>
                </thead>

                <!-- Table Body -->
                <tbody id="userTableBody" class="ant-table-tbody">
                    <% orders.forEach(order=> { %>
                        <tr id="order-<%= order._id %>">
                            <!-- Customer Name -->
                            <td class="border px-4 py-2">
                                <%= order.address.firstName %>
                                    <%= order.address.lastName %>
                            </td>

                            <!-- Phone Number -->
                            <td class="border px-4 py-2">
                                <%= order.address.phoneNumber %>
                            </td>

                            <!-- Address -->
                            <td class="border px-4 py-2">
                                <%= order.address.address %>, <%= order.address.city %>, <%= order.address.province %>,
                                            <%= order.address.country %> - <%= order.address.zipCode %>
                            </td>

                            <!-- Products -->
                            <td class="border px-4 py-2">
                                <ul class="space-y-2">
                                    <% order.items.forEach(item=> { %>
                                        <li class="flex items-center space-x-4">
                                            <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.name %>"
                                                class="w-12 h-12 object-cover rounded-md border">
                                            <div>
                                                <strong>
                                                    <%= item.productId.name %>
                                                </strong>
                                                <p class="text-sm text-gray-500">Price: $<%= item.price %>
                                                </p>
                                                <p class="text-sm text-gray-500">Quantity: <%= item.quantity %>
                                                </p>
                                            </div>
                                        </li>
                                        <% }); %>
                                </ul>
                            </td>

                            <!-- Total Amount -->
                            <td class="border px-4 py-2">$<%= order.totalAmount.toFixed(2) %>
                            </td>

                            <!-- Status -->
                            <td class="border px-4 py-2">
                                <select class="ant-select w-full status-select" onchange="updateStatus('<%= order._id %>', this.value)">
                                    <option value="Pending" <%=order.status==='Pending' ? 'selected' : '' %>>Pending</option>
                                    <option value="Processing" <%=order.status==='Processing' ? 'selected' : '' %>>Processing</option>
                                    <option value="Shipped" <%=order.status==='Shipped' ? 'selected' : '' %>>Shipped</option>
                                    <option value="Delivered" <%=order.status==='Delivered' ? 'selected' : '' %>>Delivered</option>
                                </select>
                            </td>

                            <!-- Order Date -->
                            <td class="border px-4 py-2">
                                <%= new Date(order.orderDate).toLocaleDateString('en-GB') %>
                            </td>

                            <!-- View -->
                            <td class="border px-4 py-2 text-center">
                                <a href="/orders/<%= order._id %>" class="text-blue-600 hover:underline">View</a>
                            </td>
                        </tr>
                        <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function updateStatus(orderId, newStatus) {
                fetch('/api/orders/updateOrderStatus', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId: orderId, status: newStatus }),
                })
                    .then(response => {
                        if (!response.ok) throw new Error('Failed to update status');
                        return response.json();
                    })
                    .then(data => {
                        // Find the row for the updated order using the id
                        const row = document.querySelector(`#order-${orderId}`);
                        if (row) {
                            // Update the status in the dropdown
                            const statusSelect = row.querySelector('.status-select');
                            if (statusSelect) {
                                statusSelect.value = newStatus; // Update the dropdown value
                            }

                            // Optionally, show a success message on the row or in a global alert
                            alert(`Order status updated to: ${data.updatedStatus}`);
                        }
                    })
                    .catch(error => {
                        console.error(error);
                        alert('Error updating order status');
                    });
            }


        function applyFilters() {
            const statusFilterValue = document.getElementById('statusFilter').value;
            const rows = document.querySelectorAll('#userTableBody tr');

            rows.forEach(row => {
                const statusCell = row.querySelector('select').value;
                const statusMatches = !statusFilterValue || statusCell === statusFilterValue;
                row.style.display = statusMatches ? '' : 'none';
            });

            const url = new URL(window.location.href);
            if (statusFilterValue) {
                url.searchParams.set('status', statusFilterValue);
            } else {
                url.searchParams.delete('status');
            }
            window.history.replaceState({}, '', url);
        }

        function applySorting() {
                const sortOrder = document.getElementById('timeOrder').value;
                const tableBody = document.getElementById('userTableBody');
                const rows = Array.from(tableBody.querySelectorAll('tr'));

                // Sắp xếp dựa trên Order Date
                rows.sort((a, b) => {
                    const dateA = new Date(
                        a.querySelectorAll('td')[6].innerText.trim().split('/').reverse().join('-')
                    );
                    const dateB = new Date(
                        b.querySelectorAll('td')[6].innerText.trim().split('/').reverse().join('-')
                    );
                    return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;
                });

                // Gắn lại các hàng vào bảng sau khi sắp xếp
                rows.forEach(row => tableBody.appendChild(row));

                // Cập nhật URL với tham số "order"
                const url = new URL(window.location.href);
                url.searchParams.set('order', sortOrder);
                window.history.replaceState({}, '', url);
            }
        document.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);

            // Apply status filter
            const statusFilterValue = urlParams.get('status');
            if (statusFilterValue) {
                document.getElementById('statusFilter').value = statusFilterValue;
            }

            applyFilters();

            // Apply time order
            const timeOrderValue = urlParams.get('order');
            if (timeOrderValue) {
                document.getElementById('timeOrder').value = timeOrderValue;
            }

            applySorting();
        });
    </script>
</div>