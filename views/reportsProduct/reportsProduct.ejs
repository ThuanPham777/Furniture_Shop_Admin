<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Product Report</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 font-sans leading-normal tracking-normal">
  <div class="container max-w-7xl mx-auto px-8 py-8 bg-white rounded-lg shadow-lg">
    <!-- Title -->
    <div class="text-center mb-8">
      <h1 class="text-4xl font-extrabold text-blue-600">Product Report</h1>
      <p class="text-gray-600 mt-2">An overview of product performance</p>
    </div>

    <!-- Filters -->
    <div class="flex flex-wrap gap-6 mb-8 items-end">
      <div class="flex-1">
        <label for="timeRange" class="block text-sm font-medium text-gray-700 mb-1">Time Range</label>
        <select id="timeRange"
          class="w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500"
          onchange="fetchProductReport()">
          <option value="day">Day</option>
          <option value="week">Week</option>
          <option value="month">Month</option>
        </select>
      </div>
      <div class="flex-1">
        <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">Start Date</label>
        <input type="date" id="startDate"
          class="w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500"
          onchange="fetchProductReport()" />
      </div>
      <div class="flex-1">
        <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">End Date</label>
        <input type="date" id="endDate"
          class="w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500"
          onchange="fetchProductReport()" />
      </div>
    </div>

    <!-- Product Table -->
    <div class="overflow-x-auto">
      <div class="border rounded-lg shadow-md">
        <div class="grid grid-cols-7 bg-blue-100 font-semibold text-blue-700 py-3 px-4 rounded-t-lg">
          <div>Image</div>
          <div>Product Name</div>
          <div>Price</div>
          <div>Category</div>
          <div>Manufacturer</div>
          <div>Total Revenue</div>
          <div>Total Quantity Sold</div>
        </div>
        <div id="tableBody" class="divide-y divide-gray-200">
          <!-- Rows will be dynamically inserted here -->
        </div>
      </div>
    </div>
  </div>

  <script>
    // Fetch product report data and update the table
    function fetchProductReport() {
      const timeRange = document.getElementById("timeRange").value;
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;

      // Initialize params
      const params = new URLSearchParams();

      // Add only fields with values
      if (timeRange) params.append("timeRange", timeRange);
      if (startDate) params.append("startDate", startDate);
      if (endDate) params.append("endDate", endDate);

      // Use History API to change URL
      const queryString = params.toString();
      history.replaceState(null, "", queryString ? `?${queryString}` : window.location.pathname);

      // Fetch data from server
      fetch(`/reports/getTopRevenueProducts?${queryString}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Failed to fetch product report");
          }
          return response.json();
        })
        .then((data) => {
          const tableBody = document.getElementById("tableBody");
          tableBody.innerHTML = "";

          if (data.length > 0) {
            data.forEach((item) => {
              const row = document.createElement("div");
              row.className = "grid grid-cols-7 py-4 px-4 hover:bg-gray-50";
              row.innerHTML = `
            <div>
              <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-md">
            </div>
            <div>${item.name || "N/A"}</div>
            <div>$${(item.price || 0).toFixed(2)}</div>
            <div>${item.category || "N/A"}</div>
            <div>${item.manufacturer || "N/A"}</div>
            <div>$${(item.totalRevenue || 0).toFixed(2)}</div>
            <div>${item.totalQuantity || 0}</div>
          `;
              tableBody.appendChild(row);
            });
          } else {
            tableBody.innerHTML = `<div class="text-center py-6 text-gray-500">No data available</div>`;
          }
        })
        .catch((error) => {
          console.error(error);
          alert("Error fetching product report");
        });
    }


    // Fetch initial report
    document.addEventListener("DOMContentLoaded", () => {
      fetchProductReport();
    });
  </script>
</body>

</html>